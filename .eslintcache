[{"/home/jihad/Desktop/chat/src/index.js":"1","/home/jihad/Desktop/chat/src/App.js":"2","/home/jihad/Desktop/chat/src/reportWebVitals.js":"3","/home/jihad/Desktop/chat/src/login/Login.js":"4","/home/jihad/Desktop/chat/src/chatroom/ChatRoom.js":"5","/home/jihad/Desktop/chat/src/chatroom/messageslist/MessagesList.js":"6","/home/jihad/Desktop/chat/src/chatroom/userlist/UserList.js":"7","/home/jihad/Desktop/chat/src/chatroom/messageslist/message/Message.js":"8"},{"size":500,"mtime":1611782513151,"results":"9","hashOfConfig":"10"},{"size":5744,"mtime":1611812577076,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611753053407,"results":"12","hashOfConfig":"10"},{"size":686,"mtime":1611813254342,"results":"13","hashOfConfig":"10"},{"size":3212,"mtime":1611817265141,"results":"14","hashOfConfig":"10"},{"size":408,"mtime":1611805045484,"results":"15","hashOfConfig":"10"},{"size":538,"mtime":1611812280816,"results":"16","hashOfConfig":"10"},{"size":699,"mtime":1611793477508,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"tyhjik",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/home/jihad/Desktop/chat/src/index.js",[],["38","39"],"/home/jihad/Desktop/chat/src/App.js",["40","41","42"],"// App.js -- this is  the full file\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Login from \"./login/Login\";\nimport ChatRoom from \"./chatroom/ChatRoom\";\nimport { createRef } from 'react/cjs/react.development';\n\nclass App extends Component {\n  \n  state = {\n    isConnected: false,\n    id: null,\n    messages: [],\n    users: [],\n    name: null\n  }\n  bottom = createRef();\n  id = null;\n  socket = null;\n  getId=false;\n\n \n  shouldComponentUpdate(nextProps, nextState) {\n    if ((nextState.users !== this.state.users) || nextState.id !== this.state.id || (nextState.messages !== this.state.messages) ) return true;\n    return false;\n  }\n\n  componentDidMount() {\n    this.socket = io('https://codi-server.herokuapp.com');\n\n/* // Retrieve\n if(localStorage.getItem(\"id\")!== null){\n   \n   let userName = localStorage.getItem(\"userName\");\n   let image = localStorage.getItem(\"userImage\");\n   let id = localStorage.getItem(\"userId\");\n   this.setState({name:userName,image:image,id:id});\n } \n */\n    this.socket.on('connect', () => {\n      this.setState({ isConnected: true })\n    })\n\n    this.socket.on('disconnect', () => {\n      this.setState({ isConnected: false })\n    })\n\n    this.socket.on('peeps', (peeps) => {\n      let users = peeps.map(p => {\n        return { id: p, name: \"\", image:this.getImage() }\n      })\n      console.log(\"On peeps:\", users);\n    \n     this.setState({ users: users });\n    })\n\n    this.socket.on('pong!', (additionalStuff) => {\n      //console.log('server answered!', additionalStuff)\n    })\n\n\n    this.socket.on('youare', (answer) => {\n      if(this.state.id === null) this.setState({id:answer.id});\n      \n    })\n    \n    this.socket.on('new connection', (newId) => {\n      let users = [...this.state.users];\n      users.push({ id: newId, name: \"\" })\n      this.setState({ users: users });\n    })\n    \n    this.socket.on('new disconnection', (id) => {\n      let users = [...this.state.users].filter(p => {\n        return p.id !== id\n      });\n      this.setState({ users: users });\n    })\n    \n    this.socket.on(\"next\", (message) => {\n      console.log(\"next\", message);\n    })\n    \n    this.socket.on(\"room_message\", (message) => {\n      message[\"isMain\"] = this.state.id === message.id;\n      let users = [...this.state.users];\n      let user= users.filter(u=>{return (u.id === message.id)});\n      if(user.length==0){\n        let img = this.getImage();\n        users.push({name:message.name,image:img,id:message.id})\n        message[\"image\"] = img;\n        this.setState({users:users});\n      } else{\n        message[\"image\"] = user[0].image;\n      }\n      this.addMessage(message);\n      this.scrollToBottom();\n      console.log(\"room_message\", message);\n    })\n    \n    /** this will be useful way, way later **/\n    this.socket.on('room', (old_messages) => {\n      //todo check the data\n      /* old_messages=[\n        {text:\"this is a text\",name:'fgfdgdfgdgdg',id:\"tridnf\",date:\"1-48-5\"},\n        {text:\"this fffffffffffff sfhg g  g yyggiyug gi y y ugigyuyg is a text\",name:'Jiahd',id:\"tridnf\",date:\"1-48-5\"},\n        {text:\"this is a text\",name:'Jiahd',id:\"tridnf\",date:\"1-48-5\"},\n        {text:\"this is a text\",name:'Jiahd',id:\"tridnf\",date:\"1-48-5\"},\n        {text:\"this is a text\",name:'Jiahd',id:\"tridnf\",date:\"1-48-5\"},\n        {text:\"this is a text\",name:'Jiahd',id:\"tridnf\",date:\"1-48-5\"},\n        {text:\"this is a text\",name:'Jiahd',id:\"tridnf\",date:\"1-48-5\"}\n      ] */\n      old_messages.map(m => {\n        m[\"isMain\"] = this.state.id === m.id;\n        let users = [...this.state.users];\n        let user= users.filter(u=>{return (u.id === m.id)});\n        if(user.length==0){\n          let img = this.getImage();\n          users.push({name:m.name,image:img,id:m.id})\n          m[\"image\"] = img;\n          this.setState({users:users});\n        } else{\n          m[\"image\"] = user[0].image;\n        }\n        return m;\n    \n      });\n\n    this.setState({ messages: old_messages });\n    });\n  }\n  \n\n  getImage(){\n    let num =Math.floor(Math.random() * (10 - 1) + 1);\n    return `../../assets/images/${num}.png`;\n  }\n\n  calcAndSend(val1, val2, val3) {\n    let res = (+val1) + (+val2) + (+val3);\n    this.socket.send('answer', res)\n  }\n  \n  componentWillUnmount() {\n    this.socket.close()\n    this.socket = null\n  }\n  \n   setUser(e, name) {\n    e.preventDefault();\n    this.socket.emit(\"whoami\");\n    this.setState({ name:name},()=>{\n   /*    // Store\n      let users= [...this.state.users];\n      users.push({ name:name,image:this.getImage(),id:this.state.id})\n    localStorage.setItem(\"id\", this.state.id);\n    localStorage.setItem(\"userName\",this.state.name);\n    localStorage.setItem(\"image\",this.getImage()); */\n    });\n  }\n\n  scrollToBottom = () => {\n    this.bottom.current.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  addition(e) {\n    e.preventDefault();\n    this.socket.emit('addition')\n  }\n\n  sendMessage(e, message) {\n   e.preventDefault();\n   console.log(\"id\",this.state.id);\n   this.socket.send({ text: message, name: this.state.name, id: this.state.id })\n  }\n\n  addMessage(message){\n    let messages = [...this.state.messages];\n      messages.push({isMain:message.id==this.state.id,date:message.date,text:message.text,name:message.name,id:message.id});\n      this.setState({messages:messages});\n  }\n \n  \n  render() {\n    return (\n      <div className=\"App\">\n        {(this.state.name !== null) ? <ChatRoom users={this.state.users} bottom={this.bottom} connection={this.state.isConnected} name={this.state.name} messages={this.state.messages} sendMessage={this.sendMessage.bind(this)} /> : <Login setUser={this.setUser.bind(this)} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/jihad/Desktop/chat/src/reportWebVitals.js",[],"/home/jihad/Desktop/chat/src/login/Login.js",["43"],"import React, { Component } from 'react'\nimport \"./login.css\";\n\nexport default class Login extends Component {\n    constructor(props){\n        super(props);\n    }\n    name=\"\";\n    \n    handleNameChange(e){\n        this.name = e.target.value;\n    }\n\n    render() {\n        \n        return (\n            <div className=\"login-container\">\n              <from> \n                  <input  onChange={this.handleNameChange.bind(this)} placeholder=\"Enter your Nickname here\" type=\"text\"/> \n              <button className=\"btn\" onClick={(e)=>{this.props.setUser(e,this.name)}} color=\"primary\" type=\"submit\" name=\"submit\">Submit</button>\n              </from>\n          </div>\n        )\n    }\n}\n","/home/jihad/Desktop/chat/src/chatroom/ChatRoom.js",[],"/home/jihad/Desktop/chat/src/chatroom/messageslist/MessagesList.js",[],"/home/jihad/Desktop/chat/src/chatroom/userlist/UserList.js",[],"/home/jihad/Desktop/chat/src/chatroom/messageslist/message/Message.js",["44"],"import React from 'react'\nimport \"./message.css\";\n\nfunction Message(props) {\n    const displayName = { display: (props.isMain) ? \"none\" : \"flex\" };\n    const main = (props.isMain)?\"main\":\"\";\nconsole.log(\"text:\",props.text);\n    return (\n        <div className={\"message-container \"+main}>\n            <div style={displayName} className=\"user-details\">\n                <img className=\"rounded-circle\" width=\"60px\" height=\"60px\" src={props.img} />\n                <h2 className=\"message-sender-name\">{props.name}</h2>\n            </div>\n            <p className=\"message-text\">{props.text}</p>\n            <span className=\"date\">{props.date}</span>\n        </div>\n    )\n    \n}\n\nexport default Message\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":90,"column":21,"nodeType":"51","messageId":"52","endLine":90,"endColumn":23},{"ruleId":"49","severity":1,"message":"50","line":119,"column":23,"nodeType":"51","messageId":"52","endLine":119,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":181,"column":39,"nodeType":"51","messageId":"52","endLine":181,"endColumn":41},{"ruleId":"53","severity":1,"message":"54","line":5,"column":5,"nodeType":"55","messageId":"56","endLine":7,"endColumn":6},{"ruleId":"57","severity":1,"message":"58","line":11,"column":17,"nodeType":"59","endLine":11,"endColumn":94},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]